services:
  postgres:
    image: postgis/postgis:latest
    container_name: postgres_db
    environment:
      POSTGRES_USER: sakif         # Define your database username
      POSTGRES_PASSWORD: sakif123 # Define your password
      POSTGRES_DB: invManagement      # Define your database name
    ports:
      - "5432:5432"                # Expose PostgreSQL on port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist PostgreSQL data
    healthcheck:  
      test: ["CMD-SHELL", "pg_isready -U sakif"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - management_network

  web:
    build: .
    container_name: inventoryManagement
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"  # Expose Django app on port 8000
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=sakif
      - POSTGRES_PASSWORD=sakif123
      - POSTGRES_DB=invManagement
    networks:
      - management_network
 

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - management_network


volumes:
  postgres_data:
  pgadmin_data:

networks:
  management_network:
    driver: bridge